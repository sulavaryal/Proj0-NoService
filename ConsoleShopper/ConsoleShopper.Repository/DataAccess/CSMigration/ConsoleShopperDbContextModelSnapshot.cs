// <auto-generated />
using System;
using ConsoleShopper.Repository.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleShopper.Repository.DataAccess.CSMigration
{
    [DbContext(typeof(ConsoleShopperDbContext))]
    partial class ConsoleShopperDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleShopper.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sulav",
                            LastName = "Aryal",
                            Password = "password",
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Danyelle",
                            LastName = "Tsosie",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Brigitte",
                            LastName = "Laufer",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Bettie",
                            LastName = "Turek",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Kenneth",
                            LastName = "Windsor",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Maribeth",
                            LastName = "Fontenot",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Barret",
                            LastName = "Waltrip",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Jeana",
                            LastName = "Dunston",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Mirian",
                            LastName = "Stroda",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Beverley",
                            LastName = "Digangi",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Lucilla",
                            LastName = "Chang",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Gigi",
                            LastName = "Degree",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Taneka",
                            LastName = "Ord",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Moises",
                            LastName = "Meche",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Hans",
                            LastName = "Spurgin",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Mireya",
                            LastName = "Pierro",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Susy",
                            LastName = "Argo",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Althea",
                            LastName = "Dent",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Rosana",
                            LastName = "Purvis",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Serena",
                            LastName = "San",
                            Password = "password",
                            UserTypeId = 2
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderID");

                    b.HasIndex("StoreLocationId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.StoreLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StoreLocations");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Customer"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Customer", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Order", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Product", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderID");

                    b.HasOne("ConsoleShopper.Domain.StoreLocation", "StoreLocation")
                        .WithMany()
                        .HasForeignKey("StoreLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using ConsoleShopper.Repository.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleShopper.Repository.DataAccess.CSMigration
{
    [DbContext(typeof(ConsoleShopperDbContext))]
    [Migration("20200502012816_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleShopper.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sulav",
                            LastName = "Aryal",
                            Password = "password",
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Danyelle",
                            LastName = "Tsosie",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Brigitte",
                            LastName = "Laufer",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Bettie",
                            LastName = "Turek",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Kenneth",
                            LastName = "Windsor",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Maribeth",
                            LastName = "Fontenot",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Barret",
                            LastName = "Waltrip",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Jeana",
                            LastName = "Dunston",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Mirian",
                            LastName = "Stroda",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Beverley",
                            LastName = "Digangi",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Lucilla",
                            LastName = "Chang",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Gigi",
                            LastName = "Degree",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Taneka",
                            LastName = "Ord",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Moises",
                            LastName = "Meche",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Hans",
                            LastName = "Spurgin",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Mireya",
                            LastName = "Pierro",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Susy",
                            LastName = "Argo",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Althea",
                            LastName = "Dent",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Rosana",
                            LastName = "Purvis",
                            Password = "password",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Serena",
                            LastName = "San",
                            Password = "password",
                            UserTypeId = 2
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerAddress");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            City = "Fort Worth",
                            CustomerId = 1,
                            State = "TX",
                            Street = "96 Franklin Ave.",
                            Zip = "76110"
                        },
                        new
                        {
                            Id = 2,
                            City = "Green Bay",
                            CustomerId = 2,
                            State = "WI",
                            Street = "17 Johnson Street",
                            Zip = "54302"
                        },
                        new
                        {
                            Id = 4,
                            City = "Maplewood",
                            CustomerId = 3,
                            State = "NJ",
                            Street = "752 South Main Drive",
                            Zip = "07040"
                        },
                        new
                        {
                            Id = 5,
                            City = "Gastonia",
                            CustomerId = 4,
                            State = "NC",
                            Street = "7518 Sherwood Street",
                            Zip = "28052"
                        },
                        new
                        {
                            Id = 6,
                            City = "Belleville",
                            CustomerId = 5,
                            State = "NJ",
                            Street = "6 College St.",
                            Zip = "07109"
                        },
                        new
                        {
                            Id = 1,
                            City = "Aberdeen",
                            CustomerId = 6,
                            State = "SD",
                            Street = "67 Carriage Drive",
                            Zip = "57401"
                        },
                        new
                        {
                            Id = 7,
                            City = "Missoula",
                            CustomerId = 7,
                            State = "MT",
                            Street = "580 West Deerfield Road",
                            Zip = "59801"
                        },
                        new
                        {
                            Id = 8,
                            City = "West Palm Beach",
                            CustomerId = 8,
                            State = "FL",
                            Street = "37 Pilgrim Lane",
                            Zip = "33404"
                        },
                        new
                        {
                            Id = 9,
                            City = "Roseville",
                            CustomerId = 9,
                            State = "MI",
                            Street = "84 Woodsman St.",
                            Zip = "48066"
                        },
                        new
                        {
                            Id = 10,
                            City = "Green Cove Springs",
                            CustomerId = 10,
                            State = "FL",
                            Street = "89 North Devonshire Dr",
                            Zip = "32043"
                        },
                        new
                        {
                            Id = 11,
                            City = "Wenatchee",
                            CustomerId = 11,
                            State = "WA",
                            Street = "3 Myers Street",
                            Zip = "98801"
                        },
                        new
                        {
                            Id = 12,
                            City = "Munster",
                            CustomerId = 12,
                            State = "IN",
                            Street = "265 Prairie St.",
                            Zip = "46321"
                        },
                        new
                        {
                            Id = 13,
                            City = "Huntington",
                            CustomerId = 13,
                            State = "NY",
                            Street = "467 South Smoky Hollow St",
                            Zip = "11743"
                        },
                        new
                        {
                            Id = 14,
                            City = "Meadow",
                            CustomerId = 14,
                            State = "NJ",
                            Street = "48 W. Oak St.",
                            Zip = "08003"
                        },
                        new
                        {
                            Id = 15,
                            City = "Lancaster",
                            CustomerId = 15,
                            State = "NY",
                            Street = "41 Buckingham Ave",
                            Zip = "14086"
                        },
                        new
                        {
                            Id = 16,
                            City = "Manahawkin",
                            CustomerId = 16,
                            State = "NJ",
                            Street = "290 Marsh St. ",
                            Zip = "08050"
                        },
                        new
                        {
                            Id = 17,
                            City = "Canandaigua",
                            CustomerId = 17,
                            State = "NY",
                            Street = "206 New Saddle Ave.",
                            Zip = "14424"
                        },
                        new
                        {
                            Id = 18,
                            City = "Eastpointe",
                            CustomerId = 18,
                            State = "MI",
                            Street = "58 Fifth St.",
                            Zip = "48021"
                        },
                        new
                        {
                            Id = 19,
                            City = "Saint Augustine",
                            CustomerId = 19,
                            State = "FL",
                            Street = "2 State St.",
                            Zip = "32084"
                        },
                        new
                        {
                            Id = 20,
                            City = "Cedar Rapids",
                            CustomerId = 20,
                            State = "AZ",
                            Street = "8471 East Brandywine Street",
                            Zip = "52402"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderID");

                    b.HasIndex("StoreLocationId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.StoreLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StoreLocations");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Customer"
                        });
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Customer", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.CustomerAddress", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Customer", "Customer")
                        .WithOne("CustomerAddress")
                        .HasForeignKey("ConsoleShopper.Domain.CustomerAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Order", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("ConsoleShopper.Domain.Product", b =>
                {
                    b.HasOne("ConsoleShopper.Domain.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderID");

                    b.HasOne("ConsoleShopper.Domain.StoreLocation", "StoreLocation")
                        .WithMany()
                        .HasForeignKey("StoreLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
